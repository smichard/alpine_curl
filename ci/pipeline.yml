resource_types:
- name: slack_notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: alpine_curl_sources
  type: git
  source:
    uri: https://github.com/smichard/alpine_curl.git
    branch: master
    username: {{github_username}}
    password: {{github_password}}
  check_every: 10s

- name: docker_hub
  type: docker-image
  source:
    email: {{docker_hub_email}}
    username: {{docker_hub_username}}
    password: {{docker_hub_password}}
    repository: {{docker_hub_repository}}

- name: slack_msg
  type: slack_notification
  source:
    url: {{slack_hook}}

- name: version
  type: semver
  source:
    uri: https://github.com/smichard/alpine_curl.git
    branch: version
    username: {{github_username}}
    password: {{github_password}}
    file: version
    driver: git
    initial_version: 0.5.0

- name: S3_target
  type: s3
  source:
    endpoint: {{s3_endpoint}}
    bucket: releases
    regexp: release_history/cloud_foundry_demo-(.*)-(.*).tar.gz
    access_key_id: {{s3_key}}
    secret_access_key: {{s3_secret}}

jobs:
  - name: build-alpine-curl
    public: true
    serial: true
    plan:
    - get: alpine_curl_sources
      trigger: true
    - put: docker_hub
      params:
        build: alpine_curl_sources/
      on_success:
        put: slack_msg
        params:
          channel: '#general'
          text: |
            Dev: The build $BUILD_JOB_NAME with build ID $BUILD_ID for pipeline $BUILD_PIPELINE_NAME completed succesfully. The new container is available on Docker Hub:
            https://hub.docker.com/u/smichard/
      on_failure:
        put: slack_msg
        params:
          channel: '#general'
          text: |
            Dev: The build $BUILD_JOB_NAME with build ID $BUILD_ID for pipeline $BUILD_PIPELINE_NAME failed. Check it out at:
            http://127.0.0.1:8080/builds/$BUILD_ID

  - name: ecs-backup
    public: true
    serial: true
    plan:
    - get: version
      trigger: false
    - get: alpine_curl_sources
      trigger: true
      passed: [ build-alpine-curl ]
    - task: create-artifact
      file: alpine_curl_sources/ci/tasks/create_artifact.yml
    - put: S3_target
      params:
        file: ./artifact/alpine_curl-*-*.tar.gz
        acl: public-read

  - name: bump-version-minor
    public: true
    plan:
      - aggregate:
        - get:  alpine_curl_sources
          passed: [ ecs-backup ]
          trigger: true
        - get: version
          trigger: false
        - put: version
          params: {bump: minor}

  - name: minor
    public: true
    plan:
      - aggregate:
        - get: version
          trigger: false
        - put: version
          params: {bump: minor}

  - name: major
    public: true
    plan:
      - aggregate:
        - get: version
          trigger: false
        - put: version
          params: {bump: major}
